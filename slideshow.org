#    -*- mode: org -*-
#+OPTIONS: num:nil
#+OPTIONS: toc:nil
#+Title: Rails and Phoenix Side-by-Side
#+Author: Scott Smith (OldFartDeveloper)
#+Email: scottnelsonsmith@gmail.com

* Introduction

- Tonight:

  - Introduce *Elixir* / *Phoenix*

  - Use scaffolding to generate almost identical web apps in:
    - Rails
    - Phoenix

  - Web Sockets/Channels
    - Interaction between Phoenix and Javascript
    - A chat app

  - Questions

* Elixir / Phoenix

  - Elixir :: A syntactically-rich functional language that transpiles to Erlang,
              a mature ultra-reliable language and library that's been developed
              ove the last 30 years.
  - Phoenix :: A web framework implemented in Elixir and patterned liked Rails.

** Elixir

    - Syntax is not Ruby but feels like it.
    - Like Ruby, has powerful metaprogramming capability.

** Phoenix

  - Patterned after Rails
    - Model/View/Controller
    - Migrations
    - Scaffolding
    - Console

** Erlang

  - Highly evolved language/framework for challenging concurrancy applications
    that have to be reliable
  - Mechanisms to handle failures of /just about anything/
  - Not going to cover here

* Scaffold Generate Same App in Rails and Phoenix
* Demonstrate Web Sockets/Channels in Chat App
** Demonstrate Chat App
- Demo

#+BEGIN_NOTES
Some speaker notes
#+END_NOTES

** The Elixir Channel
** The Javascript Client
* Questions
* Play Area

Nice org mode commands from Forrest.  Just type them as /less-than/ then one of:

  - 's' for code blocks ("source" code)
  - 'q' for quote
  - 'h' for html block

then /tab/
** Try Quote
#+BEGIN_QUOTE
Everything should be made as simple as possible,
     but not any simpler -- Albert Einstein
#+END_QUOTE
And let's see what that does.
** Try HTML
#+BEGIN_HTML
<h3>A header</h3>
<p>Here is a paragraph</p>
#+END_HTML
** Try src
#+BEGIN_SRC ruby
def bun
  # do something
end
#+END_SRC
